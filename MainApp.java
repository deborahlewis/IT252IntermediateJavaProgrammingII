/*
 * Deborah Kronk-Lewis
 * IT252: Intermediate Java Programming II
 */
package collegesupplysurplus;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class MainApp extends javax.swing.JFrame {

    //initialize form and error messages
    public MainApp() {
        initComponents();
        outputTitle.setText("Output");
        idError.setVisible(false); //do not show error at program start
        firstNameError.setVisible(false); //do not show error at program start
        lastNameError.setVisible(false); //do not show error at program start
        suppliesError.setVisible(false); //do not show error at program start
        booksError.setVisible(false); //do not show error at program start
        paperError.setVisible(false); //do not show error at program start
        districtError.setVisible(false); //do not show error at program start
        contactError.setVisible(false); //do not show error at program start
    }
    
    //initialize salesRep object
    SalesRep s = new SalesRep();

    //AutoGenerated Code
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        districtButtonGroup = new javax.swing.ButtonGroup();
        contactButtonGroup = new javax.swing.ButtonGroup();
        mainAppPanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        salesRepPanel = new javax.swing.JPanel();
        repIdInput = new javax.swing.JTextField();
        repIdLabel = new javax.swing.JLabel();
        lastNameInput = new javax.swing.JTextField();
        firstNameInput = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        idError = new javax.swing.JLabel();
        firstNameError = new javax.swing.JLabel();
        lastNameError = new javax.swing.JLabel();
        salesPanel = new javax.swing.JPanel();
        suppliesInput = new javax.swing.JTextField();
        booksInput = new javax.swing.JTextField();
        paperInput = new javax.swing.JTextField();
        suppliesLabel = new javax.swing.JLabel();
        booksLabel = new javax.swing.JLabel();
        paperLabel = new javax.swing.JLabel();
        suppliesError = new javax.swing.JLabel();
        booksError = new javax.swing.JLabel();
        paperError = new javax.swing.JLabel();
        districtPanel = new javax.swing.JPanel();
        northButton = new javax.swing.JRadioButton();
        southButton = new javax.swing.JRadioButton();
        eastButton = new javax.swing.JRadioButton();
        westButton = new javax.swing.JRadioButton();
        districtError = new javax.swing.JLabel();
        contactPanel = new javax.swing.JPanel();
        phoneButton = new javax.swing.JRadioButton();
        emailButton = new javax.swing.JRadioButton();
        visitButton = new javax.swing.JRadioButton();
        contactError = new javax.swing.JLabel();
        controlPanel = new javax.swing.JPanel();
        evaluateButton = new javax.swing.JButton();
        enterButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();
        displayButton = new javax.swing.JButton();
        outputPanel = new javax.swing.JPanel();
        outputTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputTextarea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainAppPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        titlePanel.setBackground(new java.awt.Color(204, 204, 204));
        titlePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "College Surplus Sales", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Calibri", 1, 24))); // NOI18N
        titlePanel.setFocusable(false);
        titlePanel.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 255, Short.MAX_VALUE)
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        salesRepPanel.setBackground(new java.awt.Color(204, 204, 204));
        salesRepPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sales Representative", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Calibri", 1, 18))); // NOI18N
        salesRepPanel.setFocusable(false);
        salesRepPanel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        repIdInput.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        repIdLabel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        repIdLabel.setLabelFor(repIdInput);
        repIdLabel.setText("Rep Id:");

        lastNameInput.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        firstNameInput.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        firstNameLabel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        firstNameLabel.setLabelFor(firstNameLabel);
        firstNameLabel.setText("First Name:");

        lastNameLabel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        lastNameLabel.setLabelFor(lastNameInput);
        lastNameLabel.setText("Last Name:");

        idError.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        idError.setForeground(new java.awt.Color(255, 0, 0));
        idError.setLabelFor(repIdInput);
        idError.setText("* Required");

        firstNameError.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        firstNameError.setForeground(new java.awt.Color(255, 0, 0));
        firstNameError.setLabelFor(firstNameInput);
        firstNameError.setText("* Required");

        lastNameError.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lastNameError.setForeground(new java.awt.Color(255, 0, 0));
        lastNameError.setLabelFor(lastNameInput);
        lastNameError.setText("* Required");

        javax.swing.GroupLayout salesRepPanelLayout = new javax.swing.GroupLayout(salesRepPanel);
        salesRepPanel.setLayout(salesRepPanelLayout);
        salesRepPanelLayout.setHorizontalGroup(
            salesRepPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, salesRepPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesRepPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastNameLabel)
                    .addComponent(repIdLabel)
                    .addComponent(firstNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(salesRepPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastNameError)
                    .addComponent(firstNameError)
                    .addComponent(idError)
                    .addGroup(salesRepPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(salesRepPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastNameInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(repIdInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        salesRepPanelLayout.setVerticalGroup(
            salesRepPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesRepPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(salesRepPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(repIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repIdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idError)
                .addGap(4, 4, 4)
                .addGroup(salesRepPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(firstNameError)
                .addGap(4, 4, 4)
                .addGroup(salesRepPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastNameError))
        );

        repIdInput.getAccessibleContext().setAccessibleName("");
        repIdInput.getAccessibleContext().setAccessibleDescription("");

        salesPanel.setBackground(new java.awt.Color(204, 204, 204));
        salesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sales", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Calibri", 1, 18))); // NOI18N
        salesPanel.setFocusable(false);
        salesPanel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        suppliesInput.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        booksInput.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        paperInput.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        suppliesLabel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        suppliesLabel.setLabelFor(suppliesInput);
        suppliesLabel.setText("Supplies:");

        booksLabel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        booksLabel.setLabelFor(booksInput);
        booksLabel.setText("Books:");

        paperLabel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        paperLabel.setLabelFor(paperInput);
        paperLabel.setText("Paper:");

        suppliesError.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        suppliesError.setForeground(new java.awt.Color(255, 0, 0));
        suppliesError.setLabelFor(lastNameInput);
        suppliesError.setText("* Required");

        booksError.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        booksError.setForeground(new java.awt.Color(255, 0, 0));
        booksError.setLabelFor(lastNameInput);
        booksError.setText("* Required");

        paperError.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        paperError.setForeground(new java.awt.Color(255, 0, 0));
        paperError.setLabelFor(lastNameInput);
        paperError.setText("* Required");

        javax.swing.GroupLayout salesPanelLayout = new javax.swing.GroupLayout(salesPanel);
        salesPanel.setLayout(salesPanelLayout);
        salesPanelLayout.setHorizontalGroup(
            salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(suppliesLabel)
                    .addComponent(booksLabel)
                    .addComponent(paperLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(suppliesError)
                    .addComponent(suppliesInput, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paperError)
                    .addComponent(booksError)
                    .addComponent(paperInput, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booksInput, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        salesPanelLayout.setVerticalGroup(
            salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suppliesInput, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suppliesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(suppliesError)
                .addGap(4, 4, 4)
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booksInput, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(booksLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(booksError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paperInput, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paperLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paperError)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        districtPanel.setBackground(new java.awt.Color(204, 204, 204));
        districtPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sales District", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Calibri", 1, 18))); // NOI18N
        districtPanel.setFocusable(false);
        districtPanel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        northButton.setBackground(new java.awt.Color(204, 204, 204));
        districtButtonGroup.add(northButton);
        northButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        northButton.setText("North");

        southButton.setBackground(new java.awt.Color(204, 204, 204));
        districtButtonGroup.add(southButton);
        southButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        southButton.setText("South");

        eastButton.setBackground(new java.awt.Color(204, 204, 204));
        districtButtonGroup.add(eastButton);
        eastButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        eastButton.setText("East");

        westButton.setBackground(new java.awt.Color(204, 204, 204));
        districtButtonGroup.add(westButton);
        westButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        westButton.setText("West");

        districtError.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        districtError.setForeground(new java.awt.Color(255, 0, 0));
        districtError.setLabelFor(lastNameInput);
        districtError.setText("* Required");

        javax.swing.GroupLayout districtPanelLayout = new javax.swing.GroupLayout(districtPanel);
        districtPanel.setLayout(districtPanelLayout);
        districtPanelLayout.setHorizontalGroup(
            districtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(districtPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(districtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(districtPanelLayout.createSequentialGroup()
                        .addComponent(northButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(southButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eastButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(westButton))
                    .addComponent(districtError))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        districtPanelLayout.setVerticalGroup(
            districtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(districtPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(districtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(northButton)
                    .addComponent(southButton)
                    .addComponent(eastButton)
                    .addComponent(westButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(districtError)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        contactPanel.setBackground(new java.awt.Color(204, 204, 204));
        contactPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Calibri", 1, 18))); // NOI18N
        contactPanel.setFocusable(false);
        contactPanel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        phoneButton.setBackground(new java.awt.Color(204, 204, 204));
        contactButtonGroup.add(phoneButton);
        phoneButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        phoneButton.setText("Phone");

        emailButton.setBackground(new java.awt.Color(204, 204, 204));
        contactButtonGroup.add(emailButton);
        emailButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        emailButton.setText("Email");

        visitButton.setBackground(new java.awt.Color(204, 204, 204));
        contactButtonGroup.add(visitButton);
        visitButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        visitButton.setText("Visit");

        contactError.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        contactError.setForeground(new java.awt.Color(255, 0, 0));
        contactError.setLabelFor(lastNameInput);
        contactError.setText("* Required");

        javax.swing.GroupLayout contactPanelLayout = new javax.swing.GroupLayout(contactPanel);
        contactPanel.setLayout(contactPanelLayout);
        contactPanelLayout.setHorizontalGroup(
            contactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contactPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contactPanelLayout.createSequentialGroup()
                        .addComponent(phoneButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(visitButton))
                    .addComponent(contactError))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        contactPanelLayout.setVerticalGroup(
            contactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contactPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneButton)
                    .addComponent(emailButton)
                    .addComponent(visitButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contactError)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        controlPanel.setBackground(new java.awt.Color(204, 204, 204));
        controlPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Calibri", 1, 18))); // NOI18N
        controlPanel.setFocusable(false);
        controlPanel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        evaluateButton.setBackground(new java.awt.Color(204, 204, 204));
        evaluateButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        evaluateButton.setText("Evaluate");
        evaluateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evaluateButtonActionPerformed(evt);
            }
        });

        enterButton.setBackground(new java.awt.Color(204, 204, 204));
        enterButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        enterButton.setText("Enter");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        quitButton.setBackground(new java.awt.Color(204, 204, 204));
        quitButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        displayButton.setBackground(new java.awt.Color(204, 204, 204));
        displayButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        displayButton.setText("Display");
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(evaluateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(212, 212, 212))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enterButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(evaluateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quitButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        outputTitle.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        outputTitle.setText("Output");

        outputTextarea.setColumns(20);
        outputTextarea.setRows(5);
        jScrollPane2.setViewportView(outputTextarea);

        javax.swing.GroupLayout outputPanelLayout = new javax.swing.GroupLayout(outputPanel);
        outputPanel.setLayout(outputPanelLayout);
        outputPanelLayout.setHorizontalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
                    .addGroup(outputPanelLayout.createSequentialGroup()
                        .addComponent(outputTitle)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        outputPanelLayout.setVerticalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(outputTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainAppPanelLayout = new javax.swing.GroupLayout(mainAppPanel);
        mainAppPanel.setLayout(mainAppPanelLayout);
        mainAppPanelLayout.setHorizontalGroup(
            mainAppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainAppPanelLayout.createSequentialGroup()
                .addGroup(mainAppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainAppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainAppPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(outputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(mainAppPanelLayout.createSequentialGroup()
                            .addGap(209, 209, 209)
                            .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(120, 120, 120)))
                    .addGroup(mainAppPanelLayout.createSequentialGroup()
                        .addGroup(mainAppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainAppPanelLayout.createSequentialGroup()
                                .addComponent(districtPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(contactPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainAppPanelLayout.createSequentialGroup()
                                .addComponent(salesRepPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(salesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        mainAppPanelLayout.setVerticalGroup(
            mainAppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainAppPanelLayout.createSequentialGroup()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainAppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainAppPanelLayout.createSequentialGroup()
                        .addGroup(mainAppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(salesRepPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(salesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(mainAppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(contactPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(districtPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(outputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainAppPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainAppPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        /*
        * WHEN EXIT BUTTON IS PRESSED
        * Ask user if they're sure they want to quit
        * If yes, close application
        * If no, close JOptionPane window & continue with program
        */

        int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to quit?", "Confirm", JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_quitButtonActionPerformed

    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
        /*
        * WHEN THE ENTER BUTTON IS PRESSED
        * 1. Validate input
        * 2. If all valid data is received, send to file
        */

        // Set data vaidator to true
        boolean allDataReceived = true; //initialize as true

        //Accept repId entry
        String repIdString = repIdInput.getText();

        //Make sure that entry exists
        try {
            if (repIdString.trim().length() == 0) { //if field with whitespace removed is empty
                idError.setVisible(true); //display error message
                idError.setText("* Required"); //let user know that field is required
                allDataReceived = false; //if all data is not received do not show confirm message
            } else {
                //Populate valid entry into SalesRep object
                int repId = Integer.parseInt(repIdString.trim()); //convert rep id to an integer and trim whitespace
                s.setRepId(repId); //add integer value to SalesRep object
                idError.setVisible(false); //hide error message
            }
            //Make sure that entry is an integer
        } catch (Exception e) { //if it'salesRep not an integer
            idError.setVisible(true); //display error message
            idError.setText("* Id must be an integer"); //let user know that field must be an int
            allDataReceived = false; //if all data is not received do not show confirm message
        }

        //Accept firstName entry
        String firstName = firstNameInput.getText(); //accept first name entry

        //Make sure that entry exists
        if (firstName.trim().length() == 0) { //if field with whitespace removed is empty
            firstNameError.setVisible(true); //display error message
            firstNameError.setText("* Required"); //let user know that field is required
            allDataReceived = false; //if all data is not received do not show confirm message
        } else {
            //Populate valid entry into SalesRep object
            s.setFirstName(firstName.trim()); //add trimmed firstName string to salesRep object
            firstNameError.setVisible(false); //hide error message
        }

        //Accept lastName entry
        String lastName = lastNameInput.getText(); //accept last name entry

        //Make sure that entry exists
        if (lastName.trim().length() == 0) { //if field with whitespace removed is empty
            lastNameError.setVisible(true); //display error message
            lastNameError.setText("* Required"); //let user know that field is required
            allDataReceived = false; //if all data is not received do not show confirm message
        } else {
            //Populate valid entry into SalesRep object
            s.setLastName(lastName.trim()); //add trimmed lastName string to salesRep object
            lastNameError.setVisible(false); //hide error message
        }

        //Accept supplies entry
        String suppliesString = suppliesInput.getText(); //accept supplies String entry

        //Make sure that entry exists
        try {
            if (suppliesString.trim().length() == 0) { //if field with whitespace removed is empty
                suppliesError.setVisible(true); //display error message
                suppliesError.setText("* Required or enter 0"); //let user know that field is required
                allDataReceived = false; //if all data is not received do not show confirm message
            } else {
                //Populate valid entry into SalesRep object
                double supplies = Double.parseDouble(suppliesString); //convert supplies to a double
                s.setSupplies(supplies); //add supplies entry to salesRep object
                suppliesError.setVisible(false); //hide error message
            }
            //Make sure that entry is a double
        } catch (Exception e) { //if it'salesRep not a double
            suppliesError.setVisible(true); //display error message
            suppliesError.setText("* Must be a double"); //let user know that value must be a double
            allDataReceived = false; //if all data is not received do not show confirm message
        }

        //Accept books entry
        String booksString = booksInput.getText(); //accept books String entry

        //Make sure that entry exists
        try {
            if (booksString.trim().length() == 0) { //if field with whitespace removed is empty
                booksError.setVisible(true); //display error message
                booksError.setText("* Required or enter 0"); //let user know that field is required
                allDataReceived = false; //if all data is not received do not show confirm message
            } else {
                //Populate valid entry into SalesRep object
                double books = Double.parseDouble(booksString); //convert books to a double
                s.setBooks(books); // add books entry to salesRep object
                booksError.setVisible(false); //hide error message
            }
            //Make sure that entry is a double
        } catch (Exception e) { //if its not a double
            booksError.setVisible(true); //display error message
            booksError.setText("* Must be a double"); //let user know that value must be a double
            allDataReceived = false; //if all data is not received do not show confirm message
        }

        //Accept apaper entry
        String paperString = paperInput.getText(); //accept paperString String entry

        //Make sure that entry exists
        try {
            if (paperString.trim().length() == 0) { //if field with whitespace removed is empty
                paperError.setVisible(true); //display error message
                paperError.setText("* Required or enter 0"); //let user know that field is required
                allDataReceived = false; //if all data is not received do not show confirm message
            } else {
                //Populate valid entry into SalesRep object
                double paper = Double.parseDouble(paperString); //convert paper to a double
                s.setPaper(paper); // add paper entry to salesRep object
                paperError.setVisible(false); //hide error message
            }
            //Make sure that entry is a double
        } catch (Exception e) { //if its not a double
            paperError.setVisible(true); //display error message
            paperError.setText("* Must be a double"); //let user know that value must be a double
            allDataReceived = false; //if all data is not received do not show confirm message
        }

        // Accept salesDistrict entry
        //Make sure that entry exists
        String district;
        if (northButton.isSelected()) { //if north radio button is selected
            district = "North"; //set district to north
            s.setDistrict(district); //push to sales rep object
            districtError.setVisible(false); //hide error message
        } else if (southButton.isSelected()) { //if south radio button is selected
            district = "South"; //set district to south
            s.setDistrict(district); //push to sales rep object
            districtError.setVisible(false); //hide error message
        } else if (eastButton.isSelected()) { //if east radio button is selected
            district = "East"; //set district to east
            s.setDistrict(district); //push to sales rep object
            districtError.setVisible(false); //hide error message
        } else if (westButton.isSelected()) { //if west radio button is selected
            district = "West"; //set district to west
            s.setDistrict(district); //push to sales rep object
            districtError.setVisible(false); //hide error message
        } else { //if nothing is selected
            allDataReceived = false; //all data is not received
            districtError.setVisible(true); //let user know field is required
        }

        //Accept preferred contact method entry
        //Make sure that entry exists
        String contact;
        if (phoneButton.isSelected()) { //if phone radio button is selected
            contact = "Phone"; //set preferred contact to phone
            s.setContact(contact); //push to sales rep object
            contactError.setVisible(false); //hide error message
        } else if (emailButton.isSelected()) { //if email radio button is selected
            contact = "Email"; //set preferred contact to email
            s.setContact(contact); //push to sales rep object
            contactError.setVisible(false); //hide error message
        } else if (visitButton.isSelected()) { //if visit radio button is selected
            contact = "Visit"; //set preferred contact to visit
            s.setContact(contact); //push to sales rep object
            contactError.setVisible(false); //hide error message
        } else { //if nothing is selected
            allDataReceived = false; //all data is not received
            contactError.setVisible(true); //let user know field is required
        }

        if (allDataReceived) {
            RepFileWriter rfs = new RepFileWriter(); //create RepFileWriter Object
            rfs.writeSalesRep(s); //write SalesRep Object to file
            outputTitle.setText("Successful Entry");
            outputTextarea.setText(s.toString());

            repIdInput.setText(""); //empty field after successful entry
            firstNameInput.setText(""); //empty field after successful entry
            lastNameInput.setText(""); //empty field after successful entry
            suppliesInput.setText(""); //empty field after successful entry
            booksInput.setText(""); //empty field after successful entry
            paperInput.setText(""); //empty field after successful entry
            districtButtonGroup.clearSelection(); //clear button group selection
            contactButtonGroup.clearSelection(); //clear button group selection

        }

    }//GEN-LAST:event_enterButtonActionPerformed

    private void evaluateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evaluateButtonActionPerformed
        /*
        * WHEN EVALUATE BUTTON IS PRESSED
        * Clear any prior entries from display
        * Read SalesRep.txt file
        * validate and populate input
        * calculate total sales for supplies, books, paper
        * If total is >= 8,000 push person to stars.txt
        */

        outputTextarea.setText(""); //clear text area from any new entries

        RepFileReader rfr = new RepFileReader(); //create RepFileReader Object

        PrintWriter writer = null;
        try {
            writer = new PrintWriter("stars.txt"); //create writer for stars.txt
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "File not found."); //display error
            Logger.getLogger(MainApp.class.getName()).log(Level.SEVERE, null, ex); //log error
        }
        writer.print(""); //clear old data from stars.txt
        writer.close(); //close file
        try {
            List<SalesRep> SalesRep = rfr.readSalesRep("salesrep.txt");  //read sales rep array

            for (SalesRep s : SalesRep) { //loop through array
                if ( (s.getSupplies() + s.getBooks() + s.getPaper()) >= 8000.0 ) { //if total of supplies, books, and paper is >= 8,000

                    StarsFileWriter sfw = new StarsFileWriter(); //create StarsWriter Object

                    sfw.writeStars(s); //write SalesRep Object to stars.txt file
                    outputTitle.setText("Displaying Stars"); //change title above textbox
                    outputTextarea.append(s.toString() + "\n"); //display stars
                }
            }
        } catch (IOException ex) { //catch exception
            JOptionPane.showMessageDialog(this, "Unable to open file."); //display error
            Logger.getLogger(MainApp.class.getName()).log(Level.SEVERE, null, ex); //log error
        }

    }//GEN-LAST:event_evaluateButtonActionPerformed

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel booksError;
    private javax.swing.JTextField booksInput;
    private javax.swing.JLabel booksLabel;
    private javax.swing.ButtonGroup contactButtonGroup;
    private javax.swing.JLabel contactError;
    private javax.swing.JPanel contactPanel;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JButton displayButton;
    private javax.swing.ButtonGroup districtButtonGroup;
    private javax.swing.JLabel districtError;
    private javax.swing.JPanel districtPanel;
    private javax.swing.JRadioButton eastButton;
    private javax.swing.JRadioButton emailButton;
    private javax.swing.JButton enterButton;
    private javax.swing.JButton evaluateButton;
    private javax.swing.JLabel firstNameError;
    private javax.swing.JTextField firstNameInput;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel idError;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lastNameError;
    private javax.swing.JTextField lastNameInput;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JPanel mainAppPanel;
    private javax.swing.JRadioButton northButton;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JTextArea outputTextarea;
    private javax.swing.JLabel outputTitle;
    private javax.swing.JLabel paperError;
    private javax.swing.JTextField paperInput;
    private javax.swing.JLabel paperLabel;
    private javax.swing.JRadioButton phoneButton;
    private javax.swing.JButton quitButton;
    private javax.swing.JTextField repIdInput;
    private javax.swing.JLabel repIdLabel;
    private javax.swing.JPanel salesPanel;
    private javax.swing.JPanel salesRepPanel;
    private javax.swing.JRadioButton southButton;
    private javax.swing.JLabel suppliesError;
    private javax.swing.JTextField suppliesInput;
    private javax.swing.JLabel suppliesLabel;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JRadioButton visitButton;
    private javax.swing.JRadioButton westButton;
    // End of variables declaration//GEN-END:variables
}
